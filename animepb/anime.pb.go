// Code generated by protoc-gen-go. DO NOT EDIT.
// source: animepb/anime.proto

package animepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Anime struct {
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Anime) Reset()         { *m = Anime{} }
func (m *Anime) String() string { return proto.CompactTextString(m) }
func (*Anime) ProtoMessage()    {}
func (*Anime) Descriptor() ([]byte, []int) {
	return fileDescriptor_b15d889cbf9faebf, []int{0}
}

func (m *Anime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Anime.Unmarshal(m, b)
}
func (m *Anime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Anime.Marshal(b, m, deterministic)
}
func (m *Anime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Anime.Merge(m, src)
}
func (m *Anime) XXX_Size() int {
	return xxx_messageInfo_Anime.Size(m)
}
func (m *Anime) XXX_DiscardUnknown() {
	xxx_messageInfo_Anime.DiscardUnknown(m)
}

var xxx_messageInfo_Anime proto.InternalMessageInfo

func (m *Anime) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Anime) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Anime) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Anime) GetCreatedAt() *timestamppb.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Anime) GetUpdatedAt() *timestamppb.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type CreateAnimeRequest struct {
	Anime                *Anime   `protobuf:"bytes,1,opt,name=anime,proto3" json:"anime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAnimeRequest) Reset()         { *m = CreateAnimeRequest{} }
func (m *CreateAnimeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAnimeRequest) ProtoMessage()    {}
func (*CreateAnimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b15d889cbf9faebf, []int{1}
}

func (m *CreateAnimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAnimeRequest.Unmarshal(m, b)
}
func (m *CreateAnimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAnimeRequest.Marshal(b, m, deterministic)
}
func (m *CreateAnimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAnimeRequest.Merge(m, src)
}
func (m *CreateAnimeRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAnimeRequest.Size(m)
}
func (m *CreateAnimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAnimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAnimeRequest proto.InternalMessageInfo

func (m *CreateAnimeRequest) GetAnime() *Anime {
	if m != nil {
		return m.Anime
	}
	return nil
}

type CreateAnimeResponse struct {
	Anime                *Anime   `protobuf:"bytes,1,opt,name=anime,proto3" json:"anime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAnimeResponse) Reset()         { *m = CreateAnimeResponse{} }
func (m *CreateAnimeResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAnimeResponse) ProtoMessage()    {}
func (*CreateAnimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b15d889cbf9faebf, []int{2}
}

func (m *CreateAnimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAnimeResponse.Unmarshal(m, b)
}
func (m *CreateAnimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAnimeResponse.Marshal(b, m, deterministic)
}
func (m *CreateAnimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAnimeResponse.Merge(m, src)
}
func (m *CreateAnimeResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAnimeResponse.Size(m)
}
func (m *CreateAnimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAnimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAnimeResponse proto.InternalMessageInfo

func (m *CreateAnimeResponse) GetAnime() *Anime {
	if m != nil {
		return m.Anime
	}
	return nil
}

type ReadAnimeRequest struct {
	AnimeId              string   `protobuf:"bytes,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadAnimeRequest) Reset()         { *m = ReadAnimeRequest{} }
func (m *ReadAnimeRequest) String() string { return proto.CompactTextString(m) }
func (*ReadAnimeRequest) ProtoMessage()    {}
func (*ReadAnimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b15d889cbf9faebf, []int{3}
}

func (m *ReadAnimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAnimeRequest.Unmarshal(m, b)
}
func (m *ReadAnimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAnimeRequest.Marshal(b, m, deterministic)
}
func (m *ReadAnimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAnimeRequest.Merge(m, src)
}
func (m *ReadAnimeRequest) XXX_Size() int {
	return xxx_messageInfo_ReadAnimeRequest.Size(m)
}
func (m *ReadAnimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAnimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAnimeRequest proto.InternalMessageInfo

func (m *ReadAnimeRequest) GetAnimeId() string {
	if m != nil {
		return m.AnimeId
	}
	return ""
}

type ReadAnimeResponse struct {
	Anime                *Anime   `protobuf:"bytes,1,opt,name=anime,proto3" json:"anime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadAnimeResponse) Reset()         { *m = ReadAnimeResponse{} }
func (m *ReadAnimeResponse) String() string { return proto.CompactTextString(m) }
func (*ReadAnimeResponse) ProtoMessage()    {}
func (*ReadAnimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b15d889cbf9faebf, []int{4}
}

func (m *ReadAnimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAnimeResponse.Unmarshal(m, b)
}
func (m *ReadAnimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAnimeResponse.Marshal(b, m, deterministic)
}
func (m *ReadAnimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAnimeResponse.Merge(m, src)
}
func (m *ReadAnimeResponse) XXX_Size() int {
	return xxx_messageInfo_ReadAnimeResponse.Size(m)
}
func (m *ReadAnimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAnimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAnimeResponse proto.InternalMessageInfo

func (m *ReadAnimeResponse) GetAnime() *Anime {
	if m != nil {
		return m.Anime
	}
	return nil
}

type ListAnimeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAnimeRequest) Reset()         { *m = ListAnimeRequest{} }
func (m *ListAnimeRequest) String() string { return proto.CompactTextString(m) }
func (*ListAnimeRequest) ProtoMessage()    {}
func (*ListAnimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b15d889cbf9faebf, []int{5}
}

func (m *ListAnimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAnimeRequest.Unmarshal(m, b)
}
func (m *ListAnimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAnimeRequest.Marshal(b, m, deterministic)
}
func (m *ListAnimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAnimeRequest.Merge(m, src)
}
func (m *ListAnimeRequest) XXX_Size() int {
	return xxx_messageInfo_ListAnimeRequest.Size(m)
}
func (m *ListAnimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAnimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAnimeRequest proto.InternalMessageInfo

type ListAnimeResponse struct {
	Anime                *Anime   `protobuf:"bytes,1,opt,name=anime,proto3" json:"anime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAnimeResponse) Reset()         { *m = ListAnimeResponse{} }
func (m *ListAnimeResponse) String() string { return proto.CompactTextString(m) }
func (*ListAnimeResponse) ProtoMessage()    {}
func (*ListAnimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b15d889cbf9faebf, []int{6}
}

func (m *ListAnimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAnimeResponse.Unmarshal(m, b)
}
func (m *ListAnimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAnimeResponse.Marshal(b, m, deterministic)
}
func (m *ListAnimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAnimeResponse.Merge(m, src)
}
func (m *ListAnimeResponse) XXX_Size() int {
	return xxx_messageInfo_ListAnimeResponse.Size(m)
}
func (m *ListAnimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAnimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAnimeResponse proto.InternalMessageInfo

func (m *ListAnimeResponse) GetAnime() *Anime {
	if m != nil {
		return m.Anime
	}
	return nil
}

type UpdateAnimeRequest struct {
	Anime                *Anime   `protobuf:"bytes,1,opt,name=anime,proto3" json:"anime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAnimeRequest) Reset()         { *m = UpdateAnimeRequest{} }
func (m *UpdateAnimeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAnimeRequest) ProtoMessage()    {}
func (*UpdateAnimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b15d889cbf9faebf, []int{7}
}

func (m *UpdateAnimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAnimeRequest.Unmarshal(m, b)
}
func (m *UpdateAnimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAnimeRequest.Marshal(b, m, deterministic)
}
func (m *UpdateAnimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAnimeRequest.Merge(m, src)
}
func (m *UpdateAnimeRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAnimeRequest.Size(m)
}
func (m *UpdateAnimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAnimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAnimeRequest proto.InternalMessageInfo

func (m *UpdateAnimeRequest) GetAnime() *Anime {
	if m != nil {
		return m.Anime
	}
	return nil
}

type UpdateAnimeResponse struct {
	Anime                *Anime   `protobuf:"bytes,1,opt,name=anime,proto3" json:"anime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAnimeResponse) Reset()         { *m = UpdateAnimeResponse{} }
func (m *UpdateAnimeResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateAnimeResponse) ProtoMessage()    {}
func (*UpdateAnimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b15d889cbf9faebf, []int{8}
}

func (m *UpdateAnimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAnimeResponse.Unmarshal(m, b)
}
func (m *UpdateAnimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAnimeResponse.Marshal(b, m, deterministic)
}
func (m *UpdateAnimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAnimeResponse.Merge(m, src)
}
func (m *UpdateAnimeResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateAnimeResponse.Size(m)
}
func (m *UpdateAnimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAnimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAnimeResponse proto.InternalMessageInfo

func (m *UpdateAnimeResponse) GetAnime() *Anime {
	if m != nil {
		return m.Anime
	}
	return nil
}

type DeleteAnimeRequest struct {
	AnimeId              string   `protobuf:"bytes,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAnimeRequest) Reset()         { *m = DeleteAnimeRequest{} }
func (m *DeleteAnimeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAnimeRequest) ProtoMessage()    {}
func (*DeleteAnimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b15d889cbf9faebf, []int{9}
}

func (m *DeleteAnimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAnimeRequest.Unmarshal(m, b)
}
func (m *DeleteAnimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAnimeRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAnimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAnimeRequest.Merge(m, src)
}
func (m *DeleteAnimeRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAnimeRequest.Size(m)
}
func (m *DeleteAnimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAnimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAnimeRequest proto.InternalMessageInfo

func (m *DeleteAnimeRequest) GetAnimeId() string {
	if m != nil {
		return m.AnimeId
	}
	return ""
}

type DeleteAnimeResponse struct {
	AnimeId              string   `protobuf:"bytes,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAnimeResponse) Reset()         { *m = DeleteAnimeResponse{} }
func (m *DeleteAnimeResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteAnimeResponse) ProtoMessage()    {}
func (*DeleteAnimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b15d889cbf9faebf, []int{10}
}

func (m *DeleteAnimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAnimeResponse.Unmarshal(m, b)
}
func (m *DeleteAnimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAnimeResponse.Marshal(b, m, deterministic)
}
func (m *DeleteAnimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAnimeResponse.Merge(m, src)
}
func (m *DeleteAnimeResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteAnimeResponse.Size(m)
}
func (m *DeleteAnimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAnimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAnimeResponse proto.InternalMessageInfo

func (m *DeleteAnimeResponse) GetAnimeId() string {
	if m != nil {
		return m.AnimeId
	}
	return ""
}

func init() {
	proto.RegisterType((*Anime)(nil), "anime.Anime")
	proto.RegisterType((*CreateAnimeRequest)(nil), "anime.CreateAnimeRequest")
	proto.RegisterType((*CreateAnimeResponse)(nil), "anime.CreateAnimeResponse")
	proto.RegisterType((*ReadAnimeRequest)(nil), "anime.ReadAnimeRequest")
	proto.RegisterType((*ReadAnimeResponse)(nil), "anime.ReadAnimeResponse")
	proto.RegisterType((*ListAnimeRequest)(nil), "anime.ListAnimeRequest")
	proto.RegisterType((*ListAnimeResponse)(nil), "anime.ListAnimeResponse")
	proto.RegisterType((*UpdateAnimeRequest)(nil), "anime.UpdateAnimeRequest")
	proto.RegisterType((*UpdateAnimeResponse)(nil), "anime.UpdateAnimeResponse")
	proto.RegisterType((*DeleteAnimeRequest)(nil), "anime.DeleteAnimeRequest")
	proto.RegisterType((*DeleteAnimeResponse)(nil), "anime.DeleteAnimeResponse")
}

func init() {
	proto.RegisterFile("animepb/anime.proto", fileDescriptor_b15d889cbf9faebf)
}

var fileDescriptor_b15d889cbf9faebf = []byte{
	// 402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x4f, 0x4f, 0xfa, 0x40,
	0x10, 0x4d, 0xfb, 0x83, 0x1f, 0x76, 0xaa, 0x06, 0x87, 0x83, 0xa5, 0x17, 0x49, 0x4f, 0x5c, 0x6c,
	0x09, 0x1e, 0x84, 0x8b, 0x11, 0xed, 0xc5, 0xc4, 0x53, 0xa3, 0x17, 0x2f, 0x64, 0x4b, 0x57, 0xd2,
	0x84, 0xfe, 0x91, 0x2e, 0x9f, 0xd0, 0x8f, 0xe2, 0x17, 0x31, 0xdd, 0x2e, 0x9b, 0x2d, 0xc5, 0x3f,
	0x78, 0x82, 0xce, 0xbc, 0x37, 0x6f, 0xe6, 0x3d, 0x28, 0xf4, 0x48, 0x1a, 0x27, 0x34, 0x0f, 0x3d,
	0xfe, 0xe9, 0xe6, 0xeb, 0x8c, 0x65, 0xd8, 0xe6, 0x0f, 0xf6, 0xc5, 0x32, 0xcb, 0x96, 0x2b, 0xea,
	0xf1, 0x62, 0xb8, 0x79, 0xf5, 0x58, 0x9c, 0xd0, 0x82, 0x91, 0x24, 0xaf, 0x70, 0xce, 0xbb, 0x06,
	0xed, 0x59, 0x09, 0xc5, 0x53, 0xd0, 0xe3, 0xc8, 0xd2, 0x06, 0xda, 0xd0, 0x08, 0xf4, 0x38, 0x42,
	0x84, 0x56, 0x4a, 0x12, 0x6a, 0xe9, 0xbc, 0xc2, 0xbf, 0xe3, 0x00, 0xcc, 0x88, 0x16, 0x8b, 0x75,
	0x9c, 0xb3, 0x38, 0x4b, 0xad, 0x7f, 0xbc, 0xa5, 0x96, 0x70, 0x0a, 0xb0, 0x58, 0x53, 0xc2, 0x68,
	0x34, 0x27, 0xcc, 0x6a, 0x0d, 0xb4, 0xa1, 0x39, 0xb6, 0xdd, 0x6a, 0x0b, 0x77, 0xbb, 0x85, 0xfb,
	0xb4, 0xdd, 0x22, 0x30, 0x04, 0x7a, 0xc6, 0x4a, 0xea, 0x26, 0x8f, 0xb6, 0xd4, 0xf6, 0xcf, 0x54,
	0x81, 0x9e, 0x31, 0x67, 0x02, 0x78, 0xcf, 0xe7, 0xf0, 0x53, 0x02, 0xfa, 0xb6, 0xa1, 0x05, 0x43,
	0x07, 0x2a, 0x17, 0xf8, 0x51, 0xe6, 0xf8, 0xd8, 0xad, 0x0c, 0xaa, 0x30, 0x55, 0xcb, 0x99, 0x42,
	0xaf, 0xc6, 0x2c, 0xf2, 0x2c, 0x2d, 0xe8, 0xaf, 0xa8, 0x97, 0xd0, 0x0d, 0x28, 0x89, 0x6a, 0x92,
	0x7d, 0x38, 0xe2, 0xcd, 0xb9, 0xb4, 0xb2, 0xc3, 0x9f, 0x1f, 0x22, 0xe7, 0x1a, 0xce, 0x14, 0xf8,
	0x01, 0x3a, 0x08, 0xdd, 0xc7, 0xb8, 0x60, 0xaa, 0x4e, 0x39, 0x4c, 0xa9, 0x1d, 0x30, 0x6c, 0x02,
	0xf8, 0xcc, 0x6d, 0xfb, 0x8b, 0x53, 0x35, 0xe6, 0x01, 0xa2, 0x1e, 0xa0, 0x4f, 0x57, 0x74, 0x47,
	0xf4, 0x1b, 0xaf, 0x46, 0xd0, 0xab, 0x11, 0x84, 0xd6, 0xd7, 0x8c, 0xf1, 0x87, 0x0e, 0x27, 0x3e,
	0x61, 0x24, 0x24, 0x45, 0x45, 0x42, 0x1f, 0x4c, 0x25, 0x59, 0xec, 0x8b, 0xc5, 0x9a, 0xbf, 0x13,
	0xdb, 0xde, 0xd7, 0x12, 0x92, 0x37, 0x60, 0xc8, 0xd4, 0xf0, 0x5c, 0x00, 0x77, 0x63, 0xb7, 0xad,
	0x66, 0x43, 0xf0, 0x6f, 0xc1, 0x90, 0x41, 0x49, 0xfe, 0x6e, 0x9c, 0x92, 0xdf, 0xc8, 0x74, 0xa4,
	0x95, 0x77, 0x28, 0xbe, 0xcb, 0x3b, 0x9a, 0x29, 0xca, 0x3b, 0xf6, 0xc5, 0xe4, 0x83, 0xa9, 0x38,
	0x2a, 0xa7, 0x34, 0x63, 0x91, 0x53, 0xf6, 0x04, 0x70, 0x67, 0xbc, 0x74, 0xc4, 0xcb, 0x26, 0xfc,
	0xcf, 0xff, 0x91, 0x57, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xfb, 0xdc, 0x90, 0x68, 0x7e, 0x04,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DatabaseAnimeClient is the client API for DatabaseAnime service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DatabaseAnimeClient interface {
	// CreateAnime: Creates a new anime.
	CreateAnime(ctx context.Context, in *CreateAnimeRequest, opts ...grpc.CallOption) (*CreateAnimeResponse, error)
	// ReadAnime: Gets an anime by ID.
	ReadAnime(ctx context.Context, in *ReadAnimeRequest, opts ...grpc.CallOption) (*ReadAnimeResponse, error)
	// ListAnime: Lists all anime.
	ListAnime(ctx context.Context, in *ListAnimeRequest, opts ...grpc.CallOption) (DatabaseAnime_ListAnimeClient, error)
	// UpdateAnime: Updates an anime.
	UpdateAnime(ctx context.Context, in *UpdateAnimeRequest, opts ...grpc.CallOption) (*UpdateAnimeResponse, error)
	// DeleteAnime: Deletes an anime.
	DeleteAnime(ctx context.Context, in *DeleteAnimeRequest, opts ...grpc.CallOption) (*DeleteAnimeResponse, error)
}

type databaseAnimeClient struct {
	cc grpc.ClientConnInterface
}

func NewDatabaseAnimeClient(cc grpc.ClientConnInterface) DatabaseAnimeClient {
	return &databaseAnimeClient{cc}
}

func (c *databaseAnimeClient) CreateAnime(ctx context.Context, in *CreateAnimeRequest, opts ...grpc.CallOption) (*CreateAnimeResponse, error) {
	out := new(CreateAnimeResponse)
	err := c.cc.Invoke(ctx, "/anime.DatabaseAnime/CreateAnime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseAnimeClient) ReadAnime(ctx context.Context, in *ReadAnimeRequest, opts ...grpc.CallOption) (*ReadAnimeResponse, error) {
	out := new(ReadAnimeResponse)
	err := c.cc.Invoke(ctx, "/anime.DatabaseAnime/ReadAnime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseAnimeClient) ListAnime(ctx context.Context, in *ListAnimeRequest, opts ...grpc.CallOption) (DatabaseAnime_ListAnimeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DatabaseAnime_serviceDesc.Streams[0], "/anime.DatabaseAnime/ListAnime", opts...)
	if err != nil {
		return nil, err
	}
	x := &databaseAnimeListAnimeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DatabaseAnime_ListAnimeClient interface {
	Recv() (*ListAnimeResponse, error)
	grpc.ClientStream
}

type databaseAnimeListAnimeClient struct {
	grpc.ClientStream
}

func (x *databaseAnimeListAnimeClient) Recv() (*ListAnimeResponse, error) {
	m := new(ListAnimeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *databaseAnimeClient) UpdateAnime(ctx context.Context, in *UpdateAnimeRequest, opts ...grpc.CallOption) (*UpdateAnimeResponse, error) {
	out := new(UpdateAnimeResponse)
	err := c.cc.Invoke(ctx, "/anime.DatabaseAnime/UpdateAnime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseAnimeClient) DeleteAnime(ctx context.Context, in *DeleteAnimeRequest, opts ...grpc.CallOption) (*DeleteAnimeResponse, error) {
	out := new(DeleteAnimeResponse)
	err := c.cc.Invoke(ctx, "/anime.DatabaseAnime/DeleteAnime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DatabaseAnimeServer is the server API for DatabaseAnime service.
type DatabaseAnimeServer interface {
	// CreateAnime: Creates a new anime.
	CreateAnime(context.Context, *CreateAnimeRequest) (*CreateAnimeResponse, error)
	// ReadAnime: Gets an anime by ID.
	ReadAnime(context.Context, *ReadAnimeRequest) (*ReadAnimeResponse, error)
	// ListAnime: Lists all anime.
	ListAnime(*ListAnimeRequest, DatabaseAnime_ListAnimeServer) error
	// UpdateAnime: Updates an anime.
	UpdateAnime(context.Context, *UpdateAnimeRequest) (*UpdateAnimeResponse, error)
	// DeleteAnime: Deletes an anime.
	DeleteAnime(context.Context, *DeleteAnimeRequest) (*DeleteAnimeResponse, error)
}

// UnimplementedDatabaseAnimeServer can be embedded to have forward compatible implementations.
type UnimplementedDatabaseAnimeServer struct {
}

func (*UnimplementedDatabaseAnimeServer) CreateAnime(ctx context.Context, req *CreateAnimeRequest) (*CreateAnimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAnime not implemented")
}
func (*UnimplementedDatabaseAnimeServer) ReadAnime(ctx context.Context, req *ReadAnimeRequest) (*ReadAnimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadAnime not implemented")
}
func (*UnimplementedDatabaseAnimeServer) ListAnime(req *ListAnimeRequest, srv DatabaseAnime_ListAnimeServer) error {
	return status.Errorf(codes.Unimplemented, "method ListAnime not implemented")
}
func (*UnimplementedDatabaseAnimeServer) UpdateAnime(ctx context.Context, req *UpdateAnimeRequest) (*UpdateAnimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAnime not implemented")
}
func (*UnimplementedDatabaseAnimeServer) DeleteAnime(ctx context.Context, req *DeleteAnimeRequest) (*DeleteAnimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAnime not implemented")
}

func RegisterDatabaseAnimeServer(s *grpc.Server, srv DatabaseAnimeServer) {
	s.RegisterService(&_DatabaseAnime_serviceDesc, srv)
}

func _DatabaseAnime_CreateAnime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAnimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseAnimeServer).CreateAnime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anime.DatabaseAnime/CreateAnime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseAnimeServer).CreateAnime(ctx, req.(*CreateAnimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseAnime_ReadAnime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAnimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseAnimeServer).ReadAnime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anime.DatabaseAnime/ReadAnime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseAnimeServer).ReadAnime(ctx, req.(*ReadAnimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseAnime_ListAnime_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListAnimeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DatabaseAnimeServer).ListAnime(m, &databaseAnimeListAnimeServer{stream})
}

type DatabaseAnime_ListAnimeServer interface {
	Send(*ListAnimeResponse) error
	grpc.ServerStream
}

type databaseAnimeListAnimeServer struct {
	grpc.ServerStream
}

func (x *databaseAnimeListAnimeServer) Send(m *ListAnimeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DatabaseAnime_UpdateAnime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAnimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseAnimeServer).UpdateAnime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anime.DatabaseAnime/UpdateAnime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseAnimeServer).UpdateAnime(ctx, req.(*UpdateAnimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseAnime_DeleteAnime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAnimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseAnimeServer).DeleteAnime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anime.DatabaseAnime/DeleteAnime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseAnimeServer).DeleteAnime(ctx, req.(*DeleteAnimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DatabaseAnime_serviceDesc = grpc.ServiceDesc{
	ServiceName: "anime.DatabaseAnime",
	HandlerType: (*DatabaseAnimeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAnime",
			Handler:    _DatabaseAnime_CreateAnime_Handler,
		},
		{
			MethodName: "ReadAnime",
			Handler:    _DatabaseAnime_ReadAnime_Handler,
		},
		{
			MethodName: "UpdateAnime",
			Handler:    _DatabaseAnime_UpdateAnime_Handler,
		},
		{
			MethodName: "DeleteAnime",
			Handler:    _DatabaseAnime_DeleteAnime_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListAnime",
			Handler:       _DatabaseAnime_ListAnime_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "animepb/anime.proto",
}
